#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <stdint.h>
#include <stdbool.h>

struct Node {
    uint8_t data;
    struct Node* next;
};

struct Node* createNode(uint8_t data) {
    struct Node* newNode;
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

void addEdge(struct Node** graph, uint8_t src, uint8_t dest) {
    struct Node* newNode = createNode(dest);
    newNode->next = graph[src];
    graph[src] = newNode;

    newNode = createNode(src);
    newNode->next = graph[dest];
    graph[dest] = newNode;
}

void printGraph(struct Node** graph, uint8_t vertices) {
    for (uint8_t i = 0; i < vertices; i++) {
        struct Node* temp = graph[i];
        printf("Adjacency list of vertex %d\n", i);
        while (temp) {
            printf("%d -> ", temp->data);
            temp = temp->next;
        }
        printf("NULL\n");
    }
}

int main() {
    uint8_t vertices = 30;
  
    struct Node* graph[vertices];


    for (int i = 0; i < vertices; i++) {
        graph[i] = NULL;
    }

    addEdge(graph, 0, 1);
    addEdge(graph, 1, 2);
    addEdge(graph, 1, 2);
    addEdge(graph, 1, 3);
    addEdge(graph, 1, 4);
    addEdge(graph, 2, 3);
    addEdge(graph, 3, 4);



    return 0;
}
